<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="sy.iter" module="sy">

	<digest>
		Iterate on characters
	</digest>

	<description>
		Outputs characters in chunks.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">sy</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				List or symbol whose character should be iterated
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				bang/stop to stop iteration
			</digest>
			<description>
				A <m>bang</m> or <m>stop</m> message stops the iteration.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Current chunk
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Current chunk's indices
			</digest>
			<description>
				Along with each chunks of characters, the list of indices of such
				characters is output (indices refer to the position of the characters
				in the input symbol or list, 1 being the first one, 2 the second one, and so one...)
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="count" optional="1" type="int">
			<digest>
				Number of parallel inputs
			</digest>
			<description>
				The number of inputs to be iterated in parallel.
				Inlets and outlets are created accordingly.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="anything">
			<arglist />
			<digest>
				Iterate on characters
			</digest>
			<description>
				Iterates on the whole input list, outputting the characters <m>N</m> by <m>N</m> from the outlet,
				where <m>N</m> is the chunk size, set by the <m>size</m> attribute (by default: 1).
				Atoms are not iterated individually, and are joined by the standard space character.
				If an argument is given, to iterate more inputs in parallel, all the input lists are iterated at the same time,
				and chunks are output right-toâ€“left from the outlets (also according to <m>iterationmode</m> attribute).
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Iterate on last received lists
			</digest>
			<description>
				Iterate on the most recently received input list.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="iterationmode" get="1" set="1" type="int" size="1">
			<digest>
				Iteration Mode
			</digest>
			<description>
				sets the behavior of the object when inputs of different length are iterated against each other.
				If set to 0, operation will stop at the end of the shortest input. If set to 1, operation will stop at the end of the
				longest input. If set to 2, operation will stop at the end of the longest input, and missing element from the shortest
				ones will be replaced by a padding character, defined by the <m>pad</m> attribute.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Iteration Mode" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="pad" get="1" set="1" type="symbol" size="1">
			<digest>
				Padding Character
			</digest>
			<description>
				Sets the padding character for the <m>iterationmode</m> 2.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Padding Character" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="size" get="1" set="1" type="int" size="1">
			<digest>
				Chunk Length
			</digest>
			<description>
				Sets the length of the chunks of characters to be output. By default it is 1 (single characters).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Chunk Length" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="sy.collect" />
		<seealso name="sy.utoi" />
		<seealso name="combine" />
		<seealso name="spell" />
		<seealso name="zl.iter" />
		<seealso name="iter" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlets 1, 2, 3... (symbol/list)">
			<description>
				List or symbol whose character should be iterated.
			</description>
		</entry>
		<entry name ="The last Inlet (bang/stop)">
			<description>
				bang/stop to stop iteration.
				A <m>bang</m> or <m>stop</m> message stops the iteration.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlets 1, 3, 5... (symbol)">
			<description>
				Current chunk.
			</description>
		</entry>
		<entry name ="Outlets 2, 4, 6... (int/list)">
			<description>
				Current chunk's indices.
				Along with each chunks of characters, the list of indices of such
				characters is output (indices refer to the position of the characters
				in the input symbol or list, 1 being the first one, 2 the second one, and so one...)
			</description>
		</entry>
	</misc>

</c74object>