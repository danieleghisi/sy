<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="sy.sort" module="sy">

	<digest>
		Sort symbols alphabetically
	</digest>

	<description>
		Sorts the incoming list of symbols alphabetically.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">sy</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Symbols to be sorted
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Sorted symbols
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Sorted indices
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="anything">
			<arglist />
			<digest>
				Sort symbols
			</digest>
			<description>
				Sorts all symbols in the incoming list alphabetically and outputs the result.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Sort symbols
			</digest>
			<description>
				Performs the sorting on the most recently received input list.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="alternate" get="1" set="1" type="int" size="1">
			<digest>
				Ignore Alternate Characters
			</digest>
			<description>
				Toggles the ability to move the differences of punctuation and alternate characters from the first to the fourth strength
				level (see <m>strength</m> attribute). When this attribute is active, for instance, it means that up to the tertiary level symbols like
				"ab" and "a-b" are equal. Defaults to 0.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Ignore Alternate Characters" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="case" get="1" set="1" type="int" size="1">
			<digest>
				Case Priority
			</digest>
			<description>
				Controls the ordering of upper and lower case letters: <br />
				- Default: upper and lower case letters are findd in accordance to their tertiary weights (see <m>strength</m>); <br />
				- Upper First: forces upper case letters to sort before lower case letters; <br />
				- Lower First: forces lower case letters to sort before upper case letters. <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Case Priority" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="digits" get="1" set="1" type="int" size="1">
			<digest>
				Digit Sequences Compared By Values
			</digest>
			<description>
				Toggles the ability to sort sequences of digits by values, e.g. "100" will thus be before "2". Defaults to 1.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Digit Sequences Compared By Values" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="maxdecimals" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Decimal Digits For Number Conversion
			</digest>
			<description>
				Sets the maximum number of decimals to be used for the conversion from number
				to symbol, in case the <m>numbers</m> attribute is set to "Convert To Symbol".
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Decimal Digits For Number Conversion" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="numin" get="1" set="1" type="int" size="1">
			<digest>
				When Numbers Are Received
			</digest>
			<description>
				Sets the way in which numbers should be handled when received:
				- Let Through: numbers should be simply copied to the output; <br />
				- Convert To Symbol (default): numbers should be converted to symbols and handled as such; <br />
				- Drop: drop numbers from the outlet. <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="When Numbers Are Received" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="reverse" get="1" set="1" type="int" size="1">
			<digest>
				Reverse Sorting
			</digest>
			<description>
				Toggles the ability to reverse the sorting (e.g. alphabetical ordering will span from Z to A, instead and not from A to Z).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Reverse Sorting" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="strength" get="1" set="1" type="int" size="1">
			<digest>
				Comparison Strength
			</digest>
			<description>
				Sets the strength for the sorting comparisons.
				The strength of the comparison can be set to different levels. <br /> <br />
				- <b>Primary Level</b>: this denotes differences between base characters (for example, "a" &gt; "b").
				It is the strongest difference. For example, dictionaries are divided into different sections by base character. <br /> <br />
				- <b>Secondary Level</b>: accents in the characters are considered secondary differences (for example, "as" &gt; "às" &gt; "at").
				Other differences between letters can also be considered secondary differences, depending on the language.
				A secondary difference is ignored when there is a primary difference anywhere in the strings.
				Note: In some languages (such as Danish), certain accented letters are considered to be separate base characters.
				In most languages, however, an accented letter only has a secondary difference from the unaccented version of that letter <br /> <br />
				- <b>Tertiary Level</b> (default): Upper and lower case differences in characters are distinguished at the tertiary level
				(for example, "ao" &gt; "Ao" &gt; "aò"). In addition, a variant of a letter differs from the base form on the tertiary level.
				Another example is the difference between large and small Kana. A tertiary difference is ignored when
				there is a primary or secondary difference anywhere in the strings. <br /> <br />
				- <b>Quaternary Level</b>: when punctuation is ignored at level 1-3 (i.e. the <m>alternate</m> attribtue is set),
				an additional level can be used to distinguish words
				with and without punctuation (for example, "ab" &gt; "a-b" &gt; "aB"). This difference is ignored when there is a primary, secondary or
				tertiary difference. The quaternary level should only be used if ignoring punctuation is required (i.e. the <m>alternate</m> attribtue is set)
				or when processing Japanese text. <br /> <br />
				- <b>Identical Level</b>: when all other levels are equal, the identical level is used as a tiebreaker.
				The Unicode code point values of the NFD form of each string are compared at this level, just in case there is no difference at levels 1-4.
				For example, Hebrew cantillation marks are only distinguished at this level.
				This level should be used sparingly, as only code point values differences between two strings is an extremely rare occurrence.
				Using this level substantially decreases the performance for
				both incremental comparison and sort key generation (as well as increasing the sort key length). <br /> <br />
				This distinction is completely inherited by the ICU collation standards: see http://userguide.icu-project.org/collation/concepts.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Comparison Strength" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="sy.compare" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (list)">
			<description>
				Symbols to be sorted.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (list)">
			<description>
				Sorted symbols.
			</description>
		</entry>
		<entry name ="Outlet 2 (list)">
			<description>
				Sorted indices.
			</description>
		</entry>
	</misc>

</c74object>